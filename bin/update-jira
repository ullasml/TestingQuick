#! /bin/bash 

#------------------------------------------------------------------------------------------------------------------
# Tips:
# Moved the json data into a file to fix globbing error
# Moved 'aplication/json' within single quotes "'" that
# fixed the HTTP 415 error
#
# get-jira-ids.awk will process each line of data, if match
# found, it will get all the Jira IDs mentioned in the string
# in the following format
#       "Delivers #MI-600"
# An example of commit message would be:"Adding new files Delivers #MI-600, Delivers #MI-591 and Delivers #MI-592"
# In the above example, Jira ids MI-600, MI-591, MI-592 will be picked
#------------------------------------------------------------------------------------------------------------------

export COMMENT="Fixed in the version <buildversion>"
if [ -n "$1" ]
then
   COMMENT=$1
fi

#Prepare the json input data in a file
echo "{ \"update\": { \"comment\": [ { \"add\": { \"body\": \"$COMMENT\" } } ] },  \"transition\": { \"id\": \"71\"},     \"fields\": { }  }" > data.json

#curl command for updating status
export command_part1="/usr/bin/curl -f -H "Content-Type:'application/json'" -u mobilebuild@replicon.com:meg@Puma63 -X POST --data @data.json  https://myjira.replicon.com/rest/api/2/issue/"

export command_part2="/transitions?expand=transitions.fields"


#curl command for getting status
export scommand_part1="/usr/bin/curl -s -u mobilebuild@replicon.com:meg@Puma63 -X GET -H "Content-Type:'application/json'" https://myjira.replicon.com/rest/api/2/issue/"

export scommand_part2="?fields=status"

echo "<------------------ Jira Update  ------------------>"
echo ""

#loop through the git commit logs
for i in `git --no-pager log|awk -f get-jira-ids.awk`
do
   echo -ne "Examining Jira status for --> $i" 
   export sfullcomm="$scommand_part1$i$scommand_part2"
	#echo $sfullcomm
	teststr=$($sfullcomm 2>/dev/null)
	#echo "-------------->>>>> $teststr"
	$(echo $teststr|grep '\"name\":\"Finished\",\"id\":\"10221\"' >/dev/null 2>&1)
	if [ $? -eq  1 ]
	then
		echo  "      *** Not in FINISHED state ***"
		continue
	else
		echo -ne "     "
	fi

   echo -ne "Updating Jira to DELIVERED"
   export fullcomm="$command_part1$i$command_part2"
   #echo "Executing: $fullcomm"

   $fullcomm 2>/dev/null
	if [ $? -eq 0 ]
	then
	   echo "     +++SUCCESS+++"
	else
	   echo "     xxxFAILEDxxx"
	fi

done

if [ -e "data.json" ]
then
	rm -f data.json
fi
echo ""
echo "<------------------ End Jira Update  ------------------>"
